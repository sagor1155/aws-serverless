service: TodosServerless

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  region: us-east-1

  # environment:
  #   DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  
  # iam:
  #   role:
  #     statements:
  #       - Effect: Allow
  #         Action:
  #           - dynamodb:Query
  #           - dynamodb:Scan
  #           - dynamodb:GetItem
  #           - dynamodb:PutItem
  #           - dynamodb:UpdateItem
  #           - dynamodb:DeleteItem
  #         Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    name: ${self:service}-create
    handler: todos/create/create.create
    description: Create Todos Service
    memorySize: 128
    timeout: 8
    events:
      - http:
          path: todos
          method: post
          cors: true

# resources:
#   Resources:
#     TodosDynamoDbTable:
#       Type: 'AWS::DynamoDB::Table'
#       DeletionPolicy: Retain
#       Properties:
#         AttributeDefinitions:
#           -
#             AttributeName: id
#             AttributeType: S
#         KeySchema:
#           -
#             AttributeName: id
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: ${self:provider.environment.DYNAMODB_TABLE}